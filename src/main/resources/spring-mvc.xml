<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd ">

	<context:component-scan base-package="com.erp.controller" />
	 <context:property-placeholder location="classpath:properties/${env}/dev.properties" /> 
	<!-- <context:property-placeholder location="classpath:properties/dev/dev.properties" /> -->
	<mvc:default-servlet-handler />
	<aop:aspectj-autoproxy />
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- 定义文本转化器 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg index="0" value="UTF-8"/>
			</bean>
			<!-- 定义json转化器，支持json跨域 -->
			<bean class="com.erp.util.CallbackMappingJackson2HttpMessageConverter">
				<!-- 跨域请求中的请求参数名 -->
				<property name="callbackName" value="callback"></property>
			</bean>
			<bean
				class="org.springframework.http.converter.ResourceHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
				<property name="objectMapper" ref="customObjectMapper" />
			</bean>
		</mvc:message-converters>
		<mvc:async-support default-timeout="10000" />
	</mvc:annotation-driven>

	<!-- <bean id="objectMapper"
		class="org.springframework.http.converter.json.JacksonObjectMapperFactoryBean"
		p:indentOutput="true" p:simpleDateFormat="yyyy-MM-dd HH:mm:ss">
	</bean> -->
	<bean id="customObjectMapper" class="com.erp.util.CustomObjectMapper" />

	<!-- 拦截器 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<list>
				<value>*Controller</value>
			</list>
		</property>
		<property name="interceptorNames">
			<list>
				<value>controllerInterceptor</value>
			</list>
		</property>
	</bean>
	
<!--配置拦截器, 多个拦截器,顺序执行 -->  
<mvc:interceptors>    
    <mvc:interceptor>    
        <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->  
         <mvc:mapping path="/**" />  
        <!-- <mvc:mapping path="/user/**" />  
        <mvc:mapping path="/test/**" />   -->
        <bean class="com.erp.controller.interceptor.UserSessionInterceptor"></bean>    
    </mvc:interceptor>  
    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->  
</mvc:interceptors>


	<bean id="controllerInterceptor" class="com.erp.controller.interceptor.ControllerInterceptor"></bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
</beans>